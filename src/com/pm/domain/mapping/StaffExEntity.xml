<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  


	<mapper namespace="StaffExEntityMapping">


	<resultMap type="java.util.Map" id="map" />
	<resultMap type="com.pm.domain.business.StaffExEntity" id="staffExEntityMap" />


	<select id="getStaffExEntity" parameterType="com.pm.domain.business.StaffExEntity" resultMap="staffExEntityMap">
		select se.* , vs.staff_name as parent_name ,
		sc.staff_no,sc.staff_name ,sc.staff_id,sc.qustomerquotes,sc.official_salary,
		case when se.salary_model is null or se.salary_model='0' 	then '原有模式' else '营销模式' end as salary_model_name
		from tb_staff_costs sc left join tb_staff_ex se on sc.staff_id = se.id
		left join vb_all_staff vs on se.parent_id = vs.staff_id
		where  sc.staff_id = #{id} 
	</select>

	<insert id="addStaffExEntity" parameterType="com.pm.domain.business.StaffExEntity" >
		insert into  tb_staff_ex(
			id,salary_model,guarantee_amount,parent_id,other_expenditures,
			level_num,other_ratio,credit_tax_amount,remarks
		)values  (
			#{id},#{salary_model},#{guarantee_amount},#{parent_id},#{other_expenditures},
			#{level_num},#{other_ratio},#{credit_tax_amount},#{remarks}
		)
	</insert>

	<update id="updateStaffExEntity" parameterType="com.pm.domain.business.StaffExEntity" >
		update  tb_staff_ex set 
		salary_model=#{salary_model},
		guarantee_amount=#{guarantee_amount},
		parent_id=#{parent_id},
		other_expenditures=#{other_expenditures},
		level_num=#{level_num},
		other_ratio=#{other_ratio},		
		credit_tax_amount=#{credit_tax_amount},	
		remarks=#{remarks}	
		where id=#{id} 
	</update>


	<delete id="deleteStaffExEntity" parameterType="com.pm.domain.business.StaffExEntity" >
		delete from  tb_staff_ex
		where id=#{id}
	</delete>


	<select id="queryStaffExEntityByPager_mysql" parameterType="map"  resultMap="staffExEntityMap" >
		<include refid="staffExEntityPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>

	<select id="queryStaffExEntityByCount_mysql" parameterType="map"  resultType="int" >
		SELECT COUNT(*) FROM (<include refid="staffExEntityPagerSql"/> )c
	</select>


	<sql id="staffExEntityPagerSql">
		select se.* , vs.staff_name as parent_name ,
		sc.staff_no,sc.staff_name ,sc.staff_id,sc.qustomerquotes,sc.official_salary,
		dept.dept_name,project.project_name,
		case when se.salary_model is null or se.salary_model='0' 	then '原有模式' else '营销模式' end as salary_model_name
		from tb_staff_costs sc left join tb_staff_ex se on sc.staff_id = se.id
		left join vb_all_staff vs on se.parent_id = vs.staff_id
		
		left join tb_project_staff projectstaff
		on sc.staff_id = projectstaff.staff_id and projectstaff.delete_flag ='0' 
		left join vb_project project 
		on projectstaff.project_id = project.project_id  
		left join ts_dept dept on project.deptid = dept.dept_id		
		where sc.delete_flag = '0' and sc.outsource_staff = '0'
		<if test="StaffExEntity.staff_no != null and StaffExEntity.staff_no != ''">
			AND sc.staff_no like concat('%',TRIM(#{StaffExEntity.staff_no}),'%')   
		</if>
		
		<if test="StaffExEntity.staff_name != null and StaffExEntity.staff_name != ''">
			AND sc.staff_name like concat('%',TRIM(#{StaffExEntity.staff_name}),'%')   
		</if>
		
		<if test="StaffExEntity.salary_model != null and StaffExEntity.salary_model != ''">
			AND se.salary_model = #{StaffExEntity.salary_model} 
		</if>
		
		<if test="StaffExEntity.dept_id != null and StaffExEntity.dept_id != ''">
			AND dept.dept_id = #{StaffExEntity.dept_id}
		</if>
		
				
		<if test="StaffExEntity.parent_id != null and StaffExEntity.parent_id != ''">
			AND se.parent_id = #{StaffExEntity.parent_id}
		</if>
		
		<if test="StaffExEntity.project_name != null and StaffExEntity.project_name != ''">
			AND project.project_name like concat('%',TRIM(#{StaffExEntity.project_name}),'%')   
		</if>
		
		order by sc.build_datetime ,sc.import_order
	</sql>

</mapper>